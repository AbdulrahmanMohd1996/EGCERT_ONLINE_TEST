Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./src/main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./RTOS/croutine.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                              ./RTOS/queue.o (memcpy)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              ./RTOS/tasks.o (memset)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                              ./RTOS/tasks.o (strncpy)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./src/main.o
LOAD ./RTOS/croutine.o
LOAD ./RTOS/heap_1.o
LOAD ./RTOS/list.o
LOAD ./RTOS/port.o
LOAD ./RTOS/queue.o
LOAD ./RTOS/tasks.o
LOAD ./RTOS/timers.o
LOAD ./MCAL/spi.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x29c2
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./src/main.o
 .text          0x00000092        0x0 ./RTOS/croutine.o
 .text          0x00000092        0x0 ./RTOS/heap_1.o
 .text          0x00000092        0x0 ./RTOS/list.o
 .text          0x00000092        0x0 ./RTOS/port.o
 .text          0x00000092        0x0 ./RTOS/queue.o
 .text          0x00000092        0x0 ./RTOS/tasks.o
 .text          0x00000092        0x0 ./RTOS/timers.o
 .text          0x00000092        0x0 ./MCAL/spi.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x00000092       0x40 ./src/main.o
                0x00000092                main
 .text.task1_code
                0x000000d2       0xc6 ./src/main.o
                0x000000d2                task1_code
 .text.xCoRoutineCreate
                0x00000198      0x128 ./RTOS/croutine.o
                0x00000198                xCoRoutineCreate
 .text.vCoRoutineAddToDelayedList
                0x000002c0       0xc2 ./RTOS/croutine.o
                0x000002c0                vCoRoutineAddToDelayedList
 .text.prvCheckPendingReadyList
                0x00000382       0x94 ./RTOS/croutine.o
 .text.prvCheckDelayedList
                0x00000416      0x15c ./RTOS/croutine.o
 .text.vCoRoutineSchedule
                0x00000572       0xf4 ./RTOS/croutine.o
                0x00000572                vCoRoutineSchedule
 .text.prvInitialiseCoRoutineLists
                0x00000666       0x72 ./RTOS/croutine.o
 .text.xCoRoutineRemoveFromEventList
                0x000006d8       0x70 ./RTOS/croutine.o
                0x000006d8                xCoRoutineRemoveFromEventList
 .text.pvPortMalloc
                0x00000748       0x8c ./RTOS/heap_1.o
                0x00000748                pvPortMalloc
 .text.vPortFree
                0x000007d4       0x18 ./RTOS/heap_1.o
                0x000007d4                vPortFree
 .text.vPortInitialiseBlocks
                0x000007ec       0x16 ./RTOS/heap_1.o
                0x000007ec                vPortInitialiseBlocks
 .text.xPortGetFreeHeapSize
                0x00000802       0x1e ./RTOS/heap_1.o
                0x00000802                xPortGetFreeHeapSize
 .text.vListInitialise
                0x00000820       0x54 ./RTOS/list.o
                0x00000820                vListInitialise
 .text.vListInitialiseItem
                0x00000874       0x20 ./RTOS/list.o
                0x00000874                vListInitialiseItem
 .text.vListInsertEnd
                0x00000894       0x98 ./RTOS/list.o
                0x00000894                vListInsertEnd
 .text.vListInsert
                0x0000092c       0xd8 ./RTOS/list.o
                0x0000092c                vListInsert
 .text.vListRemove
                0x00000a04       0x92 ./RTOS/list.o
                0x00000a04                vListRemove
 .text.pxPortInitialiseStack
                0x00000a96      0x306 ./RTOS/port.o
                0x00000a96                pxPortInitialiseStack
 .text.xPortStartScheduler
                0x00000d9c       0x6a ./RTOS/port.o
                0x00000d9c                xPortStartScheduler
 .text.vPortEndScheduler
                0x00000e06        0xe ./RTOS/port.o
                0x00000e06                vPortEndScheduler
 .text.vPortYield
                0x00000e14       0xb2 ./RTOS/port.o
                0x00000e14                vPortYield
 .text.vPortYieldFromTick
                0x00000ec6       0xb6 ./RTOS/port.o
                0x00000ec6                vPortYieldFromTick
 .text.prvSetupTimerInterrupt
                0x00000f7c       0xb8 ./RTOS/port.o
 .text.__vector_7
                0x00001034        0x6 ./RTOS/port.o
                0x00001034                __vector_7
 .text.xQueueCreate
                0x0000103a      0x152 ./RTOS/queue.o
                0x0000103a                xQueueCreate
 .text.xQueueGenericSend
                0x0000118c      0x13c ./RTOS/queue.o
                0x0000118c                xQueueGenericSend
 .text.xQueueGenericSendFromISR
                0x000012c8       0x9a ./RTOS/queue.o
                0x000012c8                xQueueGenericSendFromISR
 .text.xQueueGenericReceive
                0x00001362      0x180 ./RTOS/queue.o
                0x00001362                xQueueGenericReceive
 .text.xQueueReceiveFromISR
                0x000014e2       0x9e ./RTOS/queue.o
                0x000014e2                xQueueReceiveFromISR
 .text.uxQueueMessagesWaiting
                0x00001580       0x30 ./RTOS/queue.o
                0x00001580                uxQueueMessagesWaiting
 .text.uxQueueMessagesWaitingFromISR
                0x000015b0       0x26 ./RTOS/queue.o
                0x000015b0                uxQueueMessagesWaitingFromISR
 .text.vQueueDelete
                0x000015d6       0x2c ./RTOS/queue.o
                0x000015d6                vQueueDelete
 .text.prvCopyDataToQueue
                0x00001602      0x12a ./RTOS/queue.o
 .text.prvCopyDataFromQueue
                0x0000172c       0x90 ./RTOS/queue.o
 .text.prvUnlockQueue
                0x000017bc       0xa8 ./RTOS/queue.o
 .text.prvIsQueueEmpty
                0x00001864       0x38 ./RTOS/queue.o
 .text.xQueueIsQueueEmptyFromISR
                0x0000189c       0x2e ./RTOS/queue.o
                0x0000189c                xQueueIsQueueEmptyFromISR
 .text.prvIsQueueFull
                0x000018ca       0x3e ./RTOS/queue.o
 .text.xQueueIsQueueFullFromISR
                0x00001908       0x34 ./RTOS/queue.o
                0x00001908                xQueueIsQueueFullFromISR
 .text.xTaskGenericCreate
                0x0000193c      0x1da ./RTOS/tasks.o
                0x0000193c                xTaskGenericCreate
 .text.vTaskDelete
                0x00001b16       0xc6 ./RTOS/tasks.o
                0x00001b16                vTaskDelete
 .text.vTaskDelayUntil
                0x00001bdc       0xe8 ./RTOS/tasks.o
                0x00001bdc                vTaskDelayUntil
 .text.vTaskDelay
                0x00001cc4       0x6a ./RTOS/tasks.o
                0x00001cc4                vTaskDelay
 .text.vTaskStartScheduler
                0x00001d2e       0x6e ./RTOS/tasks.o
                0x00001d2e                vTaskStartScheduler
 .text.vTaskEndScheduler
                0x00001d9c       0x18 ./RTOS/tasks.o
                0x00001d9c                vTaskEndScheduler
 .text.vTaskSuspendAll
                0x00001db4       0x18 ./RTOS/tasks.o
                0x00001db4                vTaskSuspendAll
 .text.xTaskResumeAll
                0x00001dcc      0x114 ./RTOS/tasks.o
                0x00001dcc                xTaskResumeAll
 .text.xTaskGetTickCount
                0x00001ee0       0x2e ./RTOS/tasks.o
                0x00001ee0                xTaskGetTickCount
 .text.xTaskGetTickCountFromISR
                0x00001f0e       0x2a ./RTOS/tasks.o
                0x00001f0e                xTaskGetTickCountFromISR
 .text.uxTaskGetNumberOfTasks
                0x00001f38       0x12 ./RTOS/tasks.o
                0x00001f38                uxTaskGetNumberOfTasks
 .text.vTaskIncrementTick
                0x00001f4a      0x1aa ./RTOS/tasks.o
                0x00001f4a                vTaskIncrementTick
 .text.vTaskSwitchContext
                0x000020f4       0xcc ./RTOS/tasks.o
                0x000020f4                vTaskSwitchContext
 .text.vTaskPlaceOnEventList
                0x000021c0       0x6c ./RTOS/tasks.o
                0x000021c0                vTaskPlaceOnEventList
 .text.xTaskRemoveFromEventList
                0x0000222c       0xd0 ./RTOS/tasks.o
                0x0000222c                xTaskRemoveFromEventList
 .text.vTaskSetTimeOutState
                0x000022fc       0x32 ./RTOS/tasks.o
                0x000022fc                vTaskSetTimeOutState
 .text.xTaskCheckForTimeOut
                0x0000232e       0xba ./RTOS/tasks.o
                0x0000232e                xTaskCheckForTimeOut
 .text.vTaskMissedYield
                0x000023e8       0x14 ./RTOS/tasks.o
                0x000023e8                vTaskMissedYield
 .text.prvIdleTask
                0x000023fc       0x14 ./RTOS/tasks.o
 .text.prvInitialiseTCBVariables
                0x00002410       0xae ./RTOS/tasks.o
 .text.prvInitialiseTaskLists
                0x000024be       0x7a ./RTOS/tasks.o
 .text.prvCheckTasksWaitingTermination
                0x00002538       0x7c ./RTOS/tasks.o
 .text.prvAddCurrentTaskToDelayedList
                0x000025b4       0x92 ./RTOS/tasks.o
 .text.prvAllocateTCBAndStack
                0x00002646       0xa0 ./RTOS/tasks.o
 .text.prvDeleteTCB
                0x000026e6       0x2c ./RTOS/tasks.o
 .text.__vector_12
                0x00002712       0x66 ./MCAL/spi.o
                0x00002712                __vector_12
 .text.SPI_MasterInit
                0x00002778       0xc6 ./MCAL/spi.o
                0x00002778                SPI_MasterInit
 .text.SPI_MasterSendReciveByte
                0x0000283e       0x38 ./MCAL/spi.o
                0x0000283e                SPI_MasterSendReciveByte
 .text.SPI_SlavePollngReciveByte
                0x00002876       0x2a ./MCAL/spi.o
                0x00002876                SPI_SlavePollngReciveByte
 .text.SPI_SendString
                0x000028a0       0x3e ./MCAL/spi.o
                0x000028a0                SPI_SendString
 .text.SPI_ReciveString
                0x000028de       0x7e ./MCAL/spi.o
                0x000028de                SPI_ReciveString
 .text.SPI_CallBackFunc
                0x0000295c       0x24 ./MCAL/spi.o
                0x0000295c                SPI_CallBackFunc
 .text.libgcc   0x00002980        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00002980        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00002980        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00002980       0x12 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                0x00002980                memcpy
 .text.avr-libc
                0x00002992        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00002992                memset
 .text.avr-libc
                0x000029a0       0x1e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                0x000029a0                strncpy
                0x000029be                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000029be        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000029be                exit
                0x000029be                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000029be        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000029c2                _etext = .

.data           0x00800060        0xe load address 0x000029c2
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x6 ./src/main.o
 .data          0x00800066        0x0 ./RTOS/croutine.o
 .data          0x00800066        0x0 ./RTOS/heap_1.o
 .data          0x00800066        0x0 ./RTOS/list.o
 .data          0x00800066        0x0 ./RTOS/port.o
 .data          0x00800066        0x0 ./RTOS/queue.o
 .data          0x00800066        0x5 ./RTOS/tasks.o
 .data          0x0080006b        0x0 ./RTOS/timers.o
 .data          0x0080006b        0x0 ./MCAL/spi.o
 .data          0x0080006b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x0080006b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x0080006b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x0080006b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .data          0x0080006b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .data          0x0080006b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
 *(.data*)
 .data.xNextTaskUnblockTime
                0x0080006b        0x2 ./RTOS/tasks.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006e                . = ALIGN (0x2)
 *fill*         0x0080006d        0x1 00
                0x0080006e                _edata = .
                0x0080006e                PROVIDE (__data_end, .)

.bss            0x0080006e      0x32c
                0x0080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006e        0x0 ./src/main.o
 .bss           0x0080006e        0x0 ./RTOS/croutine.o
 .bss           0x0080006e        0x0 ./RTOS/heap_1.o
 .bss           0x0080006e        0x0 ./RTOS/list.o
 .bss           0x0080006e        0x0 ./RTOS/port.o
 .bss           0x0080006e        0x0 ./RTOS/queue.o
 .bss           0x0080006e        0x0 ./RTOS/tasks.o
 .bss           0x0080006e        0x0 ./RTOS/timers.o
 .bss           0x0080006e        0x0 ./MCAL/spi.o
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .bss           0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
 *(.bss*)
 .bss.pxCurrentCoRoutine
                0x0080006e        0x2 ./RTOS/croutine.o
                0x0080006e                pxCurrentCoRoutine
 .bss.uxTopCoRoutineReadyPriority
                0x00800070        0x1 ./RTOS/croutine.o
 .bss.xCoRoutineTickCount
                0x00800071        0x2 ./RTOS/croutine.o
 .bss.xLastTickCount
                0x00800073        0x2 ./RTOS/croutine.o
 .bss.xPassedTicks
                0x00800075        0x2 ./RTOS/croutine.o
 .bss.pxReadyCoRoutineLists
                0x00800077       0x12 ./RTOS/croutine.o
 .bss.xDelayedCoRoutineList1
                0x00800089        0x9 ./RTOS/croutine.o
 .bss.xDelayedCoRoutineList2
                0x00800092        0x9 ./RTOS/croutine.o
 .bss.pxDelayedCoRoutineList
                0x0080009b        0x2 ./RTOS/croutine.o
 .bss.pxOverflowDelayedCoRoutineList
                0x0080009d        0x2 ./RTOS/croutine.o
 .bss.xPendingReadyCoRoutineList
                0x0080009f        0x9 ./RTOS/croutine.o
 .bss.xNextFreeByte
                0x008000a8        0x2 ./RTOS/heap_1.o
 .bss.xHeap     0x008000aa      0x258 ./RTOS/heap_1.o
 .bss.pxCurrentTCB
                0x00800302        0x2 ./RTOS/tasks.o
                0x00800302                pxCurrentTCB
 .bss.uxTasksDeleted
                0x00800304        0x1 ./RTOS/tasks.o
 .bss.uxCurrentNumberOfTasks
                0x00800305        0x1 ./RTOS/tasks.o
 .bss.xTickCount
                0x00800306        0x2 ./RTOS/tasks.o
 .bss.uxTopUsedPriority
                0x00800308        0x1 ./RTOS/tasks.o
 .bss.uxTopReadyPriority
                0x00800309        0x1 ./RTOS/tasks.o
 .bss.xSchedulerRunning
                0x0080030a        0x1 ./RTOS/tasks.o
 .bss.uxSchedulerSuspended
                0x0080030b        0x1 ./RTOS/tasks.o
 .bss.uxMissedTicks
                0x0080030c        0x1 ./RTOS/tasks.o
 .bss.xMissedYield
                0x0080030d        0x1 ./RTOS/tasks.o
 .bss.xNumOfOverflows
                0x0080030e        0x1 ./RTOS/tasks.o
 .bss.uxTaskNumber
                0x0080030f        0x1 ./RTOS/tasks.o
 .bss.pxReadyTasksLists
                0x00800310       0x2d ./RTOS/tasks.o
 .bss.xDelayedTaskList1
                0x0080033d        0x9 ./RTOS/tasks.o
 .bss.xDelayedTaskList2
                0x00800346        0x9 ./RTOS/tasks.o
 .bss.pxDelayedTaskList
                0x0080034f        0x2 ./RTOS/tasks.o
 .bss.pxOverflowDelayedTaskList
                0x00800351        0x2 ./RTOS/tasks.o
 .bss.xPendingReadyList
                0x00800353        0x9 ./RTOS/tasks.o
 .bss.xTasksWaitingTermination
                0x0080035c        0x9 ./RTOS/tasks.o
 .bss.g_callBack_Ptr
                0x00800365        0x2 ./MCAL/spi.o
                0x00800365                g_callBack_Ptr
 .bss.g_lastBufferdInterruptSpiRecivedVal
                0x00800367       0x32 ./MCAL/spi.o
                0x00800367                g_lastBufferdInterruptSpiRecivedVal
 .bss.g_lastBufferdInterrupSpiCntr
                0x00800399        0x1 ./MCAL/spi.o
                0x00800399                g_lastBufferdInterrupSpiCntr
 *(COMMON)
                0x0080039a                PROVIDE (__bss_end, .)
                0x000029c2                __data_load_start = LOADADDR (.data)
                0x000029d0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080039a        0x0
                0x0080039a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080039a                PROVIDE (__noinit_end, .)
                0x0080039a                _end = .
                0x0080039a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x4a40
 *(.stab)
 .stab          0x00000000      0x6cc ./src/main.o
 .stab          0x000006cc      0x954 ./RTOS/croutine.o
                                0xb40 (size before relaxing)
 .stab          0x00001020      0x354 ./RTOS/heap_1.o
                                0x624 (size before relaxing)
 .stab          0x00001374      0x474 ./RTOS/list.o
                                0x750 (size before relaxing)
 .stab          0x000017e8      0x840 ./RTOS/port.o
                                0xb70 (size before relaxing)
 .stab          0x00002028      0xe94 ./RTOS/queue.o
                               0x11d0 (size before relaxing)
 .stab          0x00002ebc     0x1578 ./RTOS/tasks.o
                               0x17d0 (size before relaxing)
 .stab          0x00004434      0x1c8 ./RTOS/timers.o
                                0x4c8 (size before relaxing)
 .stab          0x000045fc      0x444 ./MCAL/spi.o
                                0x690 (size before relaxing)

.stabstr        0x00000000     0x341c
 *(.stabstr)
 .stabstr       0x00000000     0x341c ./src/main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(EGCERT_MASTERMC.elf elf32-avr)
LOAD linker stubs
